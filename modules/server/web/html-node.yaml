description: |-
  Поднимает простой node.js сервер, логирует входящие запросы и отдает файлы из директории запуска по их именам как html-страницы.
  
  Если файл не обнаружен, отправляет пользователю редирект на выбранный URL.

author: vinzekatze
tags:
  - node.js
  - html
  - server

arguments:
  port:
    default:
    description: порт сервера
    replacer: '#port#'
    regex: '^([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$'
  i:
    default: '0.0.0.0'
    description: IP старта сервера
    replacer: '#ip#'
    metavar: IP
    regex: '^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}$'
  r:
    default: 'https://yandex.ru'
    description: URL сайта для редиректа
    replacer: '#redirect#'

mode:
  format:
    i: '{0!r}'
    r: '{0!r}'

shell: node
script: |-
  const http = require('http')
  const fs = require('fs');
  const hostname = #ip#
  const port = #port#
  const redirect = #redirect#

  const Folder = './';
  let allfiles = [];

  fs.readdir(Folder, (err, files) => {
      files.forEach(file => {
          if (fs.lstatSync(file).isFile()) { allfiles.push( '/' + file) };
        });
        console.log('Files:');
        console.log(allfiles);
      });

  const server = http.createServer((req, res) => {
    if (allfiles.includes(req.url)) {   
      res.writeHeader(200, {"Content-Type": "text/html; charset=utf-8"});  
      res.write(fs.readFileSync('.' + req.url, 'utf8'));
      res.end();
    } else {
      res.writeHeader(302, { 'Location': 'http://ca.vtbsd.ru' + req.url});
      res.end();
    };

    var data = {from_ip: req.socket.remoteAddress,
                url: req.url,
                headers: req.headers,
                body: req.body}
    console.log(data)
  })

  server.listen(port, hostname, () => {
    console.log(`Server running at http://${hostname}:${port}/`);
  })